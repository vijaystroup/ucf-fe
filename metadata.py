"""
Metadata found in here contain a questions and answers dictionary.
The dictionaries contain a key of a test pdf with a sub dictionary that
contains the question number with its values being a tuple of the page that
starts the question/answer and the ending page.
"""

questions = {
    'FE-Aug22.pdf': {
        1: (2,2,'Dynamic Memory Management in C'),
        2: (3,3,'Linked Lists'),
        3: (4,4,'Stacks'),
        4: (6,6,'Binary Trees'),
        5: (7,7,'Binary Heaps'),
        6: (8,8,'Tries'),
        7: (10,10,'Algorithm Analysis'),
        8: (11,11,'Algorithm Analysis'),
        9: (12,12,'Recurrence Relations'),
        10: (14,15,'Recursive Coding'),
        11: (16,16,'Sorting'),
        12: (16,16,'O')
    },
    'FE-May22.pdf': {
        1: (2,2,'Dynamic Memory Management in C'),
        2: (3,3,'Linked Lists'),
        3: (4,4,'Stacks'),
        4: (6,6,'Binary Trees'),
        5: (7,7,'Hash Tables'),
        6: (8,8,'AVL Trees'),
        7: (10,10,'Algorithm Analysis'),
        8: (11,11,'Algorithm Analysis'),
        9: (12,12,'Recurrence Relations'),
        10: (14,14,'Recursive Coding'),
        11: (15,15,'Sorting'),
        12: (16,16,'Bitwise Operators')
    },
    'FE-Jan22.pdf': {
        1: (2,2,'Dynamic Memory Management in C'),
        2: (3,3,'Linked Lists'),
        3: (4,4,'Stacks'),
        4: (6,6,'Binary Trees'),
        5: (7,7,'Hash Tables'),
        6: (8,8,'Tries'),
        7: (10,10,'Algorithm Analysis'),
        8: (11,11,'Algorithm Analysis'),
        9: (12,12,'Summations'),
        10: (14,14,'Recursive Coding'),
        11: (15,15,'Sorting'),
        12: (16,16,'Bitwise Operators')
    },
    'FE-Aug21.pdf': {
        1: (2,2,'Dynamic Memory Management in C'),
        2: (3,3,'Linked Lists'),
        3: (4,4,'Queues'),
        4: (6,6,'Binary Trees'),
        5: (7,7,'Heaps'),
        6: (8,8,'AVL Trees'),
        7: (10,10,'Algorithm Analysis'),
        8: (11,11,'Algorithm Analysis'),
        9: (12,12,'Summations'),
        10: (14,14,'Recursive Coding'),
        11: (15,15,'Sorting'),
        12: (16,16,'Backtracking')
    },
    'FE-May21.pdf': {
        1: (2,2,'Dynamic Memory Management in C'),
        2: (3,3,'Linked Lists'),
        3: (4,4,'Stacks'),
        4: (6,6,'Binary Trees'),
        5: (7,7,'Hash Tables'),
        6: (8,8,'AVL Trees'),
        7: (10,10,'Algorithm Analysis'),
        8: (11,11,'Algorithm Analysis'),
        9: (12,12,'Summations'),
        10: (14,14,'Recursive Coding'),
        11: (15,15,'Sorting'),
        12: (16,16,'Bitwise Operators')
    },
    'FE-Jan21.pdf': {
        1: (2,2,'Dynamic Memory Management in C'),
        2: (3,3,'Linked Lists'),
        3: (4,4,'Queues'),
        4: (6,6,'Binary Trees'),
        5: (7,7,'Heaps'),
        6: (8,8,'Tries'),
        7: (10,10,'Algorithm Analysis'),
        8: (11,11,'Algorithm Analysis'),
        9: (12,12,'Recurrence Relations'),
        10: (14,14,'Recursive Coding'),
        11: (15,15,'Sorting'),
        12: (16,16,'Bitwise Operators')
    },
    'FE-Sept20.pdf': {
        1: (2,2,'Dynamic Memory Management in C'),
        2: (3,3,'Linked Lists'),
        3: (4,4,'Stacks'),
        4: (6,7,'Binary Search Trees'),
        5: (8,8,'Heaps'),
        6: (9,9,'Tries'),
        7: (11,11,'Algorithm Analysis'),
        8: (12,12,'Algorithm Analysis'),
        9: (13,13,'Summations'),
        10: (15,15,'Recursive Coding'),
        11: (16,16,'Sorting'),
        12: (17,17,'Bitwise Operators')
    },
    'FE-Aug20.pdf': {
        1: (2,2,'Dynamic Memory Management in C'),
        2: (3,3,'Linked Lists'),
        3: (4,4,'Stacks'),
        4: (6,6,'Binary Search Trees'),
        5: (7,7,'Heaps/Hash Tables'),
        6: (8,8,'AVL Trees'),
        7: (10,10,'Algorithm Analysis'),
        8: (11,11,'Algorithm Analysis'),
        9: (12,12,'Summations'),
        10: (14,14,'Recursive Coding'),
        11: (15,15,'Sorting'),
        12: (16,16,'Backtracking')
    },
    'FE-Jan20.pdf': {
        1: (2,2,'Dynamic Memory Management in C'),
        2: (3,3,'Linked Lists'),
        3: (4,4,'Stacks'),
        4: (6,6,'Binary Trees'),
        5: (7,7,'Hash Tables'),
        6: (8,8,'Tries'),
        7: (10,10,'Algorithm Analysis'),
        8: (11,11,'Algorithm Analysis'),
        9: (12,12,'Recurrence Relations'),
        10: (14,14,'Recursive Coding'),
        11: (15,15,'Sorting'),
        12: (16,16,'Bitwise Operators')
    },
    'FE-Aug19.pdf': {
        1: (2,2,'Dynamic Memory Management in C'),
        2: (3,3,'Linked Lists'),
        3: (4,4,'Stacks'),
        4: (6,6,'Binary Search Trees'),
        5: (7,7,'Heaps'),
        6: (8,8,'AVL Trees'),
        7: (10,10,'Algorithm Analysis'),
        8: (11,11,'Algorithm Analysis'),
        9: (12,12,'Recurrence Relations'),
        10: (14,14,'Recursive Coding'),
        11: (15,15,'Sorting'),
        12: (16,16,'Bitwise Operators')
    },
    'FE-May19.pdf': {
        1: (2,2,'Dynamic Memory Management in C'),
        2: (3,3,'Linked Lists'),
        3: (4,4,'Stacks'),
        4: (6,6,'Binary Trees'),
        5: (7,7,'Hash Tables'),
        6: (8,8,'Tries'),
        7: (10,10,'Algorithm Analysis'),
        8: (11,11,'Algorithm Analysis'),
        9: (12,12,'Recurrence Relations'),
        10: (14,14,'Recursive Coding'),
        11: (15,15,'Sorting'),
        12: (16,16,'Backtracking')
    },
    'FE-Jan19.pdf': {
        1: (2,2,'Dynamic Memory Management in C'),
        2: (3,3,'Linked Lists'),
        3: (4,4,'Stacks and Queues'),
        4: (6,6,'Binary Trees'),
        5: (7,7,'Heaps/Minheaps'),
        6: (8,8,'AVL Trees'),
        7: (10,10,'Algorithm Analysis'),
        8: (11,11,'Algorithm Analysis'),
        9: (12,12,'Summations and Recurrence Relations'),
        10: (14,14,'Recursive Coding'),
        11: (15,15,'Sorting'),
        12: (16,16,'Bitwise Operators')
    },
    'FE-Aug18.pdf': {
        1: (2,2,'Dynamic Memory Management in C'),
        2: (3,3,'Linked Lists'),
        3: (4,4,'Stacks/Queues'),
        4: (6,6,'Binary Search Trees'),
        5: (7,7,'Hash Tables'),
        6: (8,8,'Tries'),
        7: (10,10,'Algorithm Analysis'),
        8: (11,11,'Algorithm Analysis'),
        9: (12,12,'Recurrence Relations'),
        10: (14,14,'Recursive Coding'),
        11: (15,15,'Sorting'),
        12: (16,16,'Backtracking')
    },
    'FE-May18.pdf': {
        1: (2,2,'Dynamic Memory Management in C'),
        2: (3,3,'Linked Lists'),
        3: (4,4,'Stacks'),
        4: (6,6,'Binary Search Trees'),
        5: (7,7,'Heaps'),
        6: (8,8,'AVL Trees'),
        7: (10,10,'Algorithm Analysis'),
        8: (11,11,'Algorithm Analysis'),
        9: (12,12,'Summations'),
        10: (14,14,'Recursive Coding'),
        11: (15,15,'Sorting'),
        12: (16,16,'Bitwise Operators')
    },
    'FE-Jan18.pdf': {
        1: (2,2,'Dynamic Memory Management in C'),
        2: (3,3,'Linked Lists'),
        3: (4,4,'Stacks'),
        4: (6,6,'Binary Search Trees'),
        5: (7,7,'Binary Heaps'),
        6: (8,8,'AVL Trees'),
        7: (10,10,'Algorithm Analysis'),
        8: (11,11,'Algorithm Analysis'),
        9: (12,12,'Summations and Recurrence Relations'),
        10: (14,14,'Recursive Coding'),
        11: (15,15,'Sorting'),
        12: (16,16,'Backtracking')
    },
    'FE-Aug17.pdf': {
        1: (2,2,'Dynamic Memory Management in C'),
        2: (3,3,'Linked Lists'),
        3: (4,4,'Stacks'),
        4: (6,6,'Binary Search Trees'),
        5: (7,7,'Hash Tables'),
        6: (8,8,'Tries'),
        7: (10,10,'Algorithm Analysis'),
        8: (11,11,'Algorithm Analysis'),
        9: (12,12,'Summations and Recurrence Relations'),
        10: (14,14,'Recursive Coding'),
        11: (15,15,'Sorting'),
        12: (16,16,'Bitwise Operators')
    },
    'FE-May17.pdf': {
        1: (2,2,'Dynamic Memory Management in C'),
        2: (3,3,'Linked Lists'),
        3: (4,4,'Stacks'),
        4: (6,6,'Binary Search Trees'),
        5: (7,7,'Heaps'),
        6: (8,8,'AVL Trees'),
        7: (10,10,'Algorithm Analysis'),
        8: (11,11,'Algorithm Analysis'),
        9: (12,12,'Summations and Recurrence Relations'),
        10: (14,14,'Recursive Coding'),
        11: (15,15,'Sorting'),
        12: (16,16,'Backtracking')
    },
    'FE-Jan17.pdf': {
        1: (2,2,'Dynamic Memory Management in C'),
        2: (3,3,'Linked Lists'),
        3: (4,4,'Queues'),
        4: (6,6,'Binary Trees'),
        5: (7,7,'Hash Maps'),
        6: (8,8,'AVL Trees'),
        7: (10,10,'Algorithm Analysis'),
        8: (11,11,'Algorithm Analysis'),
        9: (12,12,'Summations and Recurrence Relations'),
        10: (14,14,'Recursive Coding'),
        11: (15,15,'Sorting'),
        12: (16,16,'Backtracking')
    },
    'FE-Dec16.pdf': {
        1: (2,2,'Dynamic Memory Management in C'),
        2: (3,3,'Linked Lists'),
        3: (4,4,'Stacks'),
        4: (6,6,'Binary Trees'),
        5: (7,7,'Binary Heaps'),
        6: (8,8,'Tries'),
        7: (10,10,'Algorithm Analysis'),
        8: (11,11,'Algorithm Analysis'),
        9: (12,12,'Summations and Recurrence Relations'),
        10: (14,14,'Recursive Coding'),
        11: (15,15,'Sorting'),
        12: (16,16,'Bitwise Operators')
    },
    'FE-Aug16.pdf': {
        1: (2,2,'Recursive Coding'),
        2: (3,3,'Summations and Algorithm Analysis'),
        3: (4,5,'Stacks and Queues'),
        4: (6,6,'Hash Tables'),
        5: (7,7,'Base Conversion'),
        6: (9,9,'AVL Trees and Hash Tables and Heaps'),
        7: (10,10,'Summations and Recurrence Relations'),
        8: (11,11,'Linked Lists'),
        9: (13,13,'Binary Trees'),
        10: (14,14,'Sorting')
    },
    'FE-May16.pdf': {
        1: (2,2,'Recursive Coding'),
        2: (3,3,'Summations'),
        3: (4,4,'Stacks'),
        4: (5,5,'AVL Trees and Binary Heaps'),
        5: (6,6,'Base Conversion'),
        6: (8,8,'Algorithm Analysis'),
        7: (9,9,'Algorithm Analysis'),
        8: (10,10,'Linked Lists'),
        9: (11,11,'Binary Trees'),
        10: (12,12,'Sorting')
    },
    'FE-Dec15.pdf': {
        1: (2,2,'Recursive Coding'),
        2: (3,3,'Summations and Algorithm Analysis'),
        3: (4,4,'Stacks'),
        4: (5,5,'Binary Search Trees and Hash Tables'),
        5: (6,6,'Base Conversion'),
        6: (8,8,'Algorithm Analysis'),
        7: (9,9,'Algorithm Analysis'),
        8: (10,10,'Linked Lists'),
        9: (11,11,'Binary Trees'),
        10: (12,12,'Sorting')
    },
    'FE-Aug15.pdf': {
        1: (2,2,'Recursive Coding'),
        2: (3,3,'Summations and Algorithm Analysis'),
        3: (4,4,'Stacks'),
        4: (5,5,'Binary Trees'),
        5: (6,6,'Base Conversion'),
        6: (8,8,'Algorithm Analysis'),
        7: (9,9,'Algorithm Analysis'),
        8: (10,10,'Linked Lists'),
        9: (11,11,'Binary Trees'),
        10: (12,12,'Sorting')
    }
}

answers = {
    'FE-Aug22-Sol.pdf': {
        1: (2,2),
        2: (3,3),
        3: (4,4),
        4: (6,6),
        5: (7,7),
        6: (8,8),
        7: (10,10),
        8: (11,11),
        9: (12,12),
        10: (14,15),
        11: (16,16),
        12: (16,16)
    },
    'FE-May22-Sol.pdf': {
        1: (2,2),
        2: (3,3),
        3: (4,4),
        4: (6,7),
        5: (8,9),
        6: (10,11),
        7: (13,13),
        8: (14,14),
        9: (15,15),
        10: (17,17),
        11: (18,18),
        12: (19,19)
    },
    'FE-Jan22-Sol.pdf': {
        1: (2,2),
        2: (3,3),
        3: (4,4),
        4: (6,6),
        5: (7,7),
        6: (8,8),
        7: (10,10),
        8: (11,11),
        9: (12,12),
        10: (14,14),
        11: (15,15),
        12: (16,16)
    },
    'FE-Aug21-Sol.pdf': {
        1: (2,2),
        2: (3,3),
        3: (4,4),
        4: (6,6),
        5: (7,7),
        6: (8,8),
        7: (10,10),
        8: (11,11),
        9: (12,12),
        10: (14,14),
        11: (15,15),
        12: (16,16)
    },
    'FE-May21-Sol.pdf': {
        1: (2,2),
        2: (3,3),
        3: (4,4),
        4: (6,6),
        5: (7,7),
        6: (8,8),
        7: (10,10),
        8: (11,11),
        9: (12,12),
        10: (14,14),
        11: (15,15),
        12: (16,16)
    },
    'FE-Jan21-Sol.pdf': {
        1: (2,2),
        2: (3,3),
        3: (4,4),
        4: (6,6),
        5: (7,7),
        6: (8,8),
        7: (10,11),
        8: (12,12),
        9: (13,13),
        10: (15,15),
        11: (16,16),
        12: (17,17)
    },
    'FE-Sept20-Sol.pdf': {
        1: (2,2),
        2: (3,3),
        3: (4,4),
        4: (6,7),
        5: (8,8),
        6: (9,9),
        7: (11,11),
        8: (12,12),
        9: (13,13),
        10: (15,15),
        11: (16,16),
        12: (17,17)
    },
    'FE-Aug20-Sol.pdf': {
        1: (2,2),
        2: (3,3),
        3: (4,4),
        4: (6,6),
        5: (7,7),
        6: (8,8),
        7: (10,10),
        8: (11,11),
        9: (12,12),
        10: (14,14),
        11: (15,15),
        12: (16,16)
    },
    'FE-Jan20-Sol.pdf': {
        1: (2,2),
        2: (3,3),
        3: (4,4),
        4: (6,6),
        5: (7,7),
        6: (8,8),
        7: (10,10),
        8: (11,11),
        9: (12,12),
        10: (14,14),
        11: (15,15),
        12: (16,16)
    },
    'FE-Aug19-Sol.pdf': {
        1: (2,2),
        2: (3,3),
        3: (4,4),
        4: (6,6),
        5: (7,7),
        6: (8,8),
        7: (10,10),
        8: (11,11),
        9: (12,12),
        10: (14,14),
        11: (15,15),
        12: (16,16)
    },
    'FE-May19-Sol.pdf': {
        1: (2,2),
        2: (3,3),
        3: (4,4),
        4: (6,6),
        5: (7,7),
        6: (8,8),
        7: (10,10),
        8: (11,11),
        9: (12,12),
        10: (14,14),
        11: (15,15),
        12: (16,16)
    },
    'FE-Jan19-Sol.pdf': {
        1: (2,2),
        2: (3,4),
        3: (5,5),
        4: (7,7),
        5: (8,8),
        6: (9,9),
        7: (11,11),
        8: (12,12),
        9: (13,13),
        10: (15,15),
        11: (16,16),
        12: (17,17)
    },
    'FE-Aug18-Sol.pdf': {
        1: (2,2),
        2: (3,3),
        3: (4,4),
        4: (6,6),
        5: (7,7),
        6: (8,8),
        7: (10,10),
        8: (11,11),
        9: (12,12),
        10: (14,14),
        11: (15,15),
        12: (16,16)
    },
    'FE-May18-Sol.pdf': {
        1: (2,2),
        2: (3,3),
        3: (4,4),
        4: (6,6),
        5: (7,7),
        6: (8,8),
        7: (10,10),
        8: (11,11),
        9: (12,12),
        10: (14,14),
        11: (15,15),
        12: (16,16)
    },
    'FE-Jan18-Sol.pdf': {
        1: (2,2),
        2: (3,3),
        3: (4,4),
        4: (6,6),
        5: (7,7),
        6: (8,8),
        7: (10,10),
        8: (11,11),
        9: (12,12),
        10: (14,14),
        11: (15,15),
        12: (16,16)
    },
    'FE-Aug17-Sol.pdf': {
        1: (2,2),
        2: (3,3),
        3: (4,4),
        4: (6,6),
        5: (7,7),
        6: (8,8),
        7: (10,10),
        8: (11,11),
        9: (12,12),
        10: (14,14),
        11: (15,15),
        12: (16,16)
    },
    'FE-May17-Sol.pdf': {
        1: (2,2),
        2: (3,3),
        3: (4,4),
        4: (6,6),
        5: (7,7),
        6: (8,8),
        7: (10,10),
        8: (11,11),
        9: (12,12),
        10: (14,14),
        11: (15,15),
        12: (16,16)
    },
    'FE-Jan17-Sol.pdf': {
        1: (2,2),
        2: (3,3),
        3: (4,4),
        4: (6,6),
        5: (7,7),
        6: (8,8),
        7: (10,10),
        8: (11,11),
        9: (12,12),
        10: (14,14),
        11: (15,15),
        12: (16,16)
    },
    'FE-Dec16-Sol.pdf': {
        1: (2,2),
        2: (3,3),
        3: (4,4),
        4: (6,6),
        5: (7,7),
        6: (8,8),
        7: (10,10),
        8: (11,11),
        9: (12,12),
        10: (14,14),
        11: (15,15),
        12: (16,16)
    },
    'FE-Aug16-Sol.pdf': {
        1: (2,2),
        2: (3,3),
        3: (4,5),
        4: (6,6),
        5: (7,7),
        6: (9,9),
        7: (10,10),
        8: (11,11),
        9: (12,12),
        10: (13,13)
    },
    'FE-May16-Sol.pdf': {
        1: (2,2),
        2: (3,3),
        3: (4,4),
        4: (5,5),
        5: (6,6),
        6: (8,8),
        7: (9,9),
        8: (10,10),
        9: (11,11),
        10: (12,12)
    },
    'FE-Dec15-Sol.pdf': {
        1: (2,2),
        2: (3,3),
        3: (4,4),
        4: (5,5),
        5: (6,6),
        6: (8,8),
        7: (9,9),
        8: (10,10),
        9: (11,11),
        10: (12,12)
    },
    'FE-Aug15-Sol.pdf': {
        1: (2,2),
        2: (3,3),
        3: (4,4),
        4: (5,5),
        5: (6,6),
        6: (8,8),
        7: (9,9),
        8: (10,10),
        9: (11,11),
        10: (12,12)
    }
}
